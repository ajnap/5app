name: Pull Request Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Validate PR title follows conventional commits
  pr-title-check:
    name: Check PR Title
    runs-on: ubuntu-latest

    steps:
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false

  # Check for merge conflicts
  merge-conflict-check:
    name: Check for Merge Conflicts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for merge conflicts
        run: |
          git fetch origin main
          if git merge-tree $(git merge-base HEAD origin/main) HEAD origin/main | grep -q '<<<<<<<'; then
            echo "::error::Merge conflicts detected"
            exit 1
          fi

  # Check file size limits
  file-size-check:
    name: Check File Sizes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for large files
        run: |
          large_files=$(find . -type f -size +500k -not -path "*/node_modules/*" -not -path "*/.next/*" -not -path "*/coverage/*")
          if [ -n "$large_files" ]; then
            echo "::warning::Large files detected (>500KB):"
            echo "$large_files"
          fi

  # Run quick smoke tests
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quick syntax check
        run: npm run lint -- --max-warnings=0

      - name: Quick type check
        run: npm run type-check

      - name: Quick test run
        run: npm test -- --passWithNoTests

  # Comment PR with test results
  pr-comment:
    name: PR Comment with Results
    runs-on: ubuntu-latest
    needs: [pr-title-check, merge-conflict-check, file-size-check, smoke-tests]
    if: always()

    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.issue.number;
            const results = {
              title: '${{ needs.pr-title-check.result }}',
              conflicts: '${{ needs.merge-conflict-check.result }}',
              fileSize: '${{ needs.file-size-check.result }}',
              smoke: '${{ needs.smoke-tests.result }}'
            };

            const emoji = (status) => status === 'success' ? '‚úÖ' : status === 'failure' ? '‚ùå' : '‚ö†Ô∏è';

            const body = `## PR Check Results

            ${emoji(results.title)} **PR Title**: ${results.title}
            ${emoji(results.conflicts)} **Merge Conflicts**: ${results.conflicts}
            ${emoji(results.fileSize)} **File Size Check**: ${results.fileSize}
            ${emoji(results.smoke)} **Smoke Tests**: ${results.smoke}

            ${Object.values(results).every(r => r === 'success') ? 'üéâ All checks passed!' : '‚ö†Ô∏è Some checks need attention'}
            `;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: body
            });
